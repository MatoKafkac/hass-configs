# HA Startup lamp control logic
- alias: ----- Start lamp upon HA startup by time -----
  hide_entity: True
  trigger:
    platform: event
    event_type: homeassistant_start
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ states.sensor.time.state > states.sensor.time_lamp_on.state }}'
    - condition: template
      value_template: '{{ states.sensor.time.state < states.sensor.time_lamp_off.state }}'
  action:
    - service: switch.turn_on
      entity_id: switch.lamp_value

# Lamp control logic
- alias: ----- Lamp turn on timing -----
  hide_entity: True
  trigger:
    - platform: template
      value_template: '{{ states.sensor.time.state == states.sensor.time_lamp_on.state }}'
  condition:
    - condition: state
      entity_id: input_boolean.override
      state: 'off'
  action: 
    - service: switch.turn_on
      entity_id: switch.lamp_value

- alias: ----- Lamp turn off timing -----
  hide_entity: True
  trigger:
    - platform: template
      value_template: '{{ states.sensor.time.state == states.sensor.time_lamp_off.state }}'
  condition:
    - condition: state
      entity_id: input_boolean.override
      state: 'off'
  action: 
    - service: switch.turn_off
      entity_id: switch.lamp_value

# Lamp override
- alias: ----- Lamp on override -----
  hide_entity: True
  trigger:
    platform: state
    entity_id: input_boolean.lamp_control
    from: 'off'
    to: 'on'
  condition:
    - condition: state
      entity_id: input_boolean.override
      state: 'on'
  action: 
    - service: switch.turn_on
      entity_id: switch.lamp_value

- alias: ----- Lamp off override -----
  hide_entity: True
  trigger:
    platform: state
    entity_id: input_boolean.lamp_control
    from: 'on'
    to: 'off'
  condition:
    - condition: state
      entity_id: input_boolean.override
      state: 'on'
  action: 
    - service: switch.turn_off
      entity_id: switch.lamp_value

- alias: ----- Upon enable override set lamp to current state ON -----
  hide_entity: True
  trigger:
    platform: state
    entity_id: input_boolean.override
    from: 'off'
    to: 'on'
  condition:
    - condition: state
      entity_id: input_boolean.lamp_value
      state: 'on'
  action: 
    - service: input_boolean.turn_on
      entity_id: input_boolean.lamp_control

- alias: ----- Upon enable override set lamp to current state OFF -----
  hide_entity: True
  trigger:
    platform: state
    entity_id: input_boolean.override
    from: 'off'
    to: 'on'
  condition:
    - condition: state
      entity_id: input_boolean.lamp_value
      state: 'off'
  action: 
    - service: input_boolean.turn_off
      entity_id: input_boolean.lamp_control

- alias: ----- Upon disable override return lamp to required state ON -----
  hide_entity: True
  trigger:
    platform: state
    entity_id: input_boolean.override
    from: 'on'
    to: 'off'
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ states.sensor.time.state > states.sensor.time_lamp_on.state }}'
    - condition: template
      value_template: '{{ states.sensor.time.state < states.sensor.time_lamp_off.state }}'
  action: 
    - service: switch.turn_on
      entity_id: switch.lamp_value

- alias: ----- Upon disable override return lamp to required state OFF -----
  hide_entity: True
  trigger:
    platform: state
    entity_id: input_boolean.override
    from: 'on'
    to: 'off'
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ states.sensor.time.state > states.sensor.time_lamp_on.state }}'
    - condition: template
      value_template: '{{ states.sensor.time.state < states.sensor.time_lamp_off.state }}'
  action: 
    - service: switch.turn_off
      entity_id: switch.lamp_value

